h1. About

*Fluent Mail API* is a simple Java API that uses Sun's "JavaMail API":http://java.sun.com/products/javamail/ to send e-mail messages.

This is a project to demonstrate "Fluent Interfaces":http://martinfowler.com/bliki/FluentInterface.html usage, although it's fully functional and production-ready. The API consists in an internal DSL to send e-mail messages that was designed to be dead-simple to use.

h1. Usage example

<pre>new EmailMessage()
    .from("demo@guilhermechapiewski.com")
    .to("destination@address.com")
    .withSubject("Fluent Mail API")
    .withBody("Demo message")
    .send();</pre>

h2. Comparison with JavaMail API

If you use pure "JavaMail API":http://java.sun.com/products/javamail/, it will be something like this (from "Java World tutorial":http://www.javaworld.com/javaworld/jw-06-1999/jw-06-javamail.html?page=4):

<pre>// create some properties and get the default Session
Properties props = new Properties();
props.put("mail.smtp.host", _smtpHost);
Session session = Session.getDefaultInstance(props, null);
// create a message
Address replyToList[] = { new InternetAddress(replyTo) };
Message newMessage = new MimeMessage(session);
if (_fromName != null)
    newMessage.setFrom(new InternetAddress(from,
        _fromName + " on behalf of " + replyTo));
else
    newMessage.setFrom(new InternetAddress(from));
    newMessage.setReplyTo(replyToList);
    newMessage.setRecipients(Message.RecipientType.BCC, _toList);
    newMessage.setSubject(subject);
    newMessage.setSentDate(sentDate);
// send newMessage
Transport transport = session.getTransport(SMTP_MAIL);
transport.connect(_smtpHost, _user, _password);
transport.sendMessage(newMessage, _toList);</pre>

h1. 20 second tutorial

h2. 1) Get the JARs

Download the latest "fluent-mail-api.jar":https://github.com/guilhermechapiewski/fluent-mail-api/raw/master/builds/fluent-mail-api-1.0.2.jar (check all the releases available at the "builds":https://github.com/guilhermechapiewski/fluent-mail-api/tree/master/builds/ directory) and "mail.jar":https://github.com/guilhermechapiewski/fluent-mail-api/raw/master/lib/mail.jar. You can also download mail.jar from "JavaMail API":http://java.sun.com/products/javamail/ website.

h2. 2) Configuration

You can configure Fluent Mail API in two ways:

Create a simple *fluent-mail-api.properties* file and make it available in the classpath. Example:

<pre>smtp.server=my.smtp.server.com
auth.required=true
use.secure.smtp=false
smtp.username=gc
smtp.password=mypasswd</pre>

OR

Configure it programatically in your application startup:

<pre>EmailTransportConfiguration.configure("my.smtp.server.com", true, false, "gc", "mypasswd");</pre>

h2. 3) That's it!

You are ready to start using the API!

h1. Features

  * Really simple to use API.
  * Send email to, cc or bcc multiple addresses.
  * SMTP authentication support.
  * Secure SMTP support.
  * Send e-mail with attachments. (contribution by "danielbussade":https://github.com/danielbussade)

h1. License

*Fluent Mail API* is free software licensed under the "Apache 2.0 License":http://www.apache.org/licenses/. For more details, check "LICENSE.txt":https://github.com/guilhermechapiewski/fluent-mail-api/raw/master/LICENSE.txt.